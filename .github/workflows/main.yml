name: "Secrets Pipeline"
on:
  workflow_dispatch:
    inputs:
      secretkey:
        description: "Enter your secret key name"
        type: string
      secretvalue:
        description: "Enter your secret value:"
        type: string
      environment:
        description: "Enter the environment for secret creation:"
        default: "stage"
        type: string
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

env:
  PLAN : plan.tfplan
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./config/stage/terraform/eu-west-1
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.5

      - name: install-aws-cli-action
        uses: unfor19/install-aws-cli-action@v1
            
      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
    
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Secrets
        id: secrets
        run: |
          secret_value=$(echo -n "${{ inputs.secretvalue }}" | base64 | tr -d '\n')
          echo $secret_value
          value=$(aws kms encrypt --key-id alias/encription_key --plaintext ${{ inputs.secretvalue }} --output text --region eu-west-1 --query CiphertextBlob)
          echo "secret after AWS:" $value
          sudo apt-get install dos2unix  # For Debian/Ubuntu
          dos2unix ${GITHUB_WORKSPACE}/terraform/packages/scripts/add_secret.sh
          bash ${GITHUB_WORKSPACE}/terraform/packages/scripts/add_secret.sh ${{ inputs.secretkey }} $value
          cat secrets.auto.tfvars
          
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true
                    
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          git config user.email "gitlab@email.com"
          git config user.name "gitlab"
          bash ${GITHUB_WORKSPACE}/terraform/packages/scripts/check_git_remote.sh
          git add secrets.auto.tfvars
          git commit -m "add new secret from pipeline"
          git push gitlab_origin HEAD:main
          terraform apply -auto-approve -input=false